pipeline {
    environment {
        ENV_NAME = ""
    }
    agent any
    parameters {
        // Valid parameter types are booleanParam, choice, file, text, password, run, or string
        string(defaultValue: "https://api.starter-ca-central-1.openshift.com", description: 'What environment?', name: 'KUBERNETES_SERVICE_HOST')
        booleanParam(defaultValue: true, description: '', name: 'SKIP_TLS')
        password(defaultValue: "hTVjdsvYT5PaQ0ZQdxVeXPQwCyz5yqDkPCIMJXWBmoE", description: 'your token', name: 'AUTH_TOKEN')
        choice(
            choices: 'Deploy\nCreateConfigMap\nTest', description: '', name: 'REQUESTED_ACTION')
    }

    stages {
        stage ('CreateConfigMap') {
            when {
                expression { params.REQUESTED_ACTION == 'CreateConfigMap' }
            }
            steps {
                sh 'oc project ${PROJECT_NAME}'
                sh 'oc create -f https://raw.githubusercontent.com/debianmaster/openshift-examples/master/configmaps-examples/configmap-ex.yml'
            }
        }
        
        stage ('Deploy') {
            when {
               expression { params.REQUESTED_ACTION == 'Deploy' }
            }
            steps {
             //   sh 'curl https://raw.githubusercontent.com/matrix-redhat/jenkins/master/tal.properties'
                load "${WORKSPACE}\\tal.properties"
            echo "project name is ${PROJECT_NAME}"
            echo "deployment name is ${DEPLOYMENT_NAME}"
             //openshiftDeploy(namespace: 'eran2', depCfg: 'nodejs-ex')
             //ENV_NAME = ${PROJECT_NAME}
             //sh 'echo "Building Environment: " + ${PROJECT_NAME}'
             openshiftDeploy(namespace: 'gogo' + "${PROJECT_NAME}" + 'hoho', depCfg: "${DEPLOYMENT_NAME}")
            }
        }
        
   
   stage ('Test') {
            when {
               expression { params.REQUESTED_ACTION == 'Test' }
            }
            steps {
            echo "${PROJECT_NAME}"
                sh 'curl https://raw.githubusercontent.com/matrix-redhat/jenkins/master/tal.properties'
                //def props = readProperties interpolate: true, file: 'https://raw.githubusercontent.com/matrix-redhat/jenkins/master/tal.properties'
                //println(props.PROJECT_NAME);
            }
        }
 }       
}
